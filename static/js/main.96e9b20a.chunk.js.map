{"version":3,"sources":["Cartao.js","Mensagem.js","Botoes.js","Jogo.js","GraficoLinha.js","index.js"],"names":["Cartao","title","this","props","titulo","style","styles","card","className","inner","children","Component","backgroundColor","defaultProps","Mensagem","texto","Botoes","botoes","label","icon","onClick","fIniciar","fEncerrar","fZerar","Jogo","valorInicial","valorFinal","timerGeral","timerSegundoASegundo","operacoes","simbolo","operacao","a","b","gerarConta","n1","Math","floor","random","n2","oQueFazer","length","resultado","gerarAlternativas","aux","n","includes","push","_","shuffle","gerarJogo","alternativas","setState","tempoRestante","encerrar","clearInterval","iniciarRodada","f","t","state","intervaloDeAtualizacao","setInterval","Array","fill","undefined","status","conta","map","e","i","valor","toString","alternativa","indice","fAtualizarPontuacao","GraficoLinha","colecoes","acertos","dados","cor","erros","contador","atualizarDados","zerar","tension","options","animation","duration","scales","y","ticks","stepSize","type","data","labels","datasets","borderColor","PureComponent","App","alterarStatus","atualizarPontuacao","acertou","zerarPontuacao","ReactDOM","render","document","querySelector"],"mappings":"4QAGqBA,E,4JACjB,WACI,OACI,cAAC,IAAD,CAAMC,MAAOC,KAAKC,MAAMC,OAAQC,MAAOC,EAAOC,KAA9C,SACI,qBAAKC,UAAS,UAAKF,EAAOG,MAAZ,YAAqBP,KAAKC,MAAMK,WAA9C,SACKN,KAAKC,MAAMO,iB,GALIC,aAY9BL,EAAS,CACXC,KAAM,CAACK,gBAAiB,mBACxBH,MAAO,4CAGXT,EAAOa,aAAe,CAClBT,OAAQ,gC,ICnBSU,E,4JACjB,WACI,OACI,qBAAKN,UAAS,UAAKF,EAAOS,MAAZ,YAAqBb,KAAKC,MAAMK,WAA9C,SACKN,KAAKC,MAAMY,Y,GAJUJ,aAUhCL,EAAS,CACXS,MAAO,0F,OCVUC,E,4JACjB,WACI,OACI,qBAAKR,UAAS,UAAKN,KAAKC,MAAMK,UAAhB,YAA6BF,EAAOW,QAAlD,SAEI,sBAAKT,UAAU,8BAAf,UACI,cAAC,IAAD,CACIU,MAAM,eACNV,UAAU,oCACVW,KAAK,cACLC,QAASlB,KAAKC,MAAMkB,WAExB,cAAC,IAAD,CACIH,MAAM,gBACNV,UAAU,oDACVW,KAAK,cACLC,QAASlB,KAAKC,MAAMmB,YAGxB,cAAC,IAAD,CACIJ,MAAM,qBACNV,UAAU,qDACVW,KAAK,cACLC,QAASlB,KAAKC,MAAMoB,kB,GAvBRZ,aAgC9BL,EAAS,CACXW,OAAQ,I,QChCSO,E,kDACjB,WAAarB,GAAO,IAAD,8BACf,cAAMA,IASVsB,aAAe,EAVI,EAWnBC,WAAa,GAXM,EAanBC,WAAa,KAbM,EAcnBC,qBAAuB,KAdJ,EAgBnBC,UAAY,CACR,CACIC,QAAS,IAAKC,SAAU,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAE1C,CACIH,QAAS,IAAKC,SAAU,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KArB3B,EAyBnBC,WAAa,WACT,IAAIC,EAAKC,KAAKC,MAAMD,KAAKE,SAAW,EAAKZ,YAAc,EAAKD,aACxDc,EAAKH,KAAKC,MAAMD,KAAKE,SAAW,EAAKZ,YAAc,EAAKD,aACxDe,EAAYJ,KAAKC,MAAMD,KAAKE,SAAW,EAAKT,UAAUY,QAG1D,MAAO,CAACN,KAAII,KAAIT,QAFF,EAAKD,UAAUW,GAAf,QAEWE,UADT,EAAKb,UAAUW,GAAf,SAAsCL,EAAII,KA9B3C,EAkCnBI,kBAAoB,SAACD,GAEjB,IADA,IAAIE,EAAM,CAACF,GACJE,EAAIH,OAAS,GAAE,CAClB,IAAII,EAAIT,KAAKC,MAAOD,KAAKE,SAAW,EAAKZ,YAAc,EAAKD,aACvDmB,EAAIE,SAASD,IACdD,EAAIG,KAAKF,GAEjB,OAAOG,IAAEC,QAAQL,IAzCF,EA4CnBM,UAAY,WACR,MAAmC,EAAKhB,aAAnCC,EAAL,EAAKA,GAAII,EAAT,EAASA,GAAIT,EAAb,EAAaA,QAASY,EAAtB,EAAsBA,UAClBS,EAAe,EAAKR,kBAAkBD,GAC1C,EAAKU,SAAS,CACVjB,KAAII,KAAIG,YAAWZ,UAASqB,eAAcE,cAAe,KAhD9C,EAoDnBC,SAAW,WACPC,cAAc,EAAK5B,YACnB4B,cAAc,EAAK3B,uBAtDJ,EAkEnB4B,cAAgB,WACZD,cAAc,EAAK5B,YACnB4B,cAAc,EAAK3B,sBACnB,IAAY6B,EAAGC,EAOf,EAAK/B,YAPO8B,EAOW,EAAKP,UAPbQ,EAOwB,EAAKC,MAAMC,uBAN9CH,IACA,EAAK7B,qBAAuBiC,aAAa,WACrC,EAAKT,SAAS,CAACC,cAAe,EAAKM,MAAMN,cAAgB,MAC1D,KACIQ,YAAYJ,EAAGC,KAxE1B,EAAKC,MAAQ,CACTR,aAAcW,MAAM,GAAGC,UAAKC,GAC5BJ,uBAAwB,IACxBP,cAAe,GALJ,E,qDAyDnB,WAC8B,OAAtBnD,KAAKC,MAAM8D,QACX/D,KAAKsD,kB,kCAGb,WACItD,KAAKoD,a,oBAgBT,WAAS,IAAD,OACEY,EACF,qBAAK1D,UAAWF,EAAO4D,MAAvB,SAEQ,CAAChE,KAAKyD,MAAMxB,GAAIjC,KAAKyD,MAAM7B,QAAS5B,KAAKyD,MAAMpB,GAAI,IAAK,OAAO4B,KAAK,SAACC,EAAGC,GAAJ,OAChE,qBAEI7D,UAAWF,EAAOgE,MAFtB,SAGKF,GAFIC,EAAEE,iBASrBpB,EACF,qBAAK3C,UAAWF,EAAO6C,aAAvB,SAEQjD,KAAKyD,MAAMR,aAAagB,KAAK,SAACK,EAAaC,GAAd,OACzB,cAAC,IAAD,CAEIvD,MAAK,OAAEsD,QAAF,IAAEA,OAAF,EAAEA,EAAaD,WACpB/D,UAAS,UAAKF,EAAOgE,MAAZ,YAAqBhE,EAAOkE,aACrCpD,QAAS,WACL,EAAKoC,gBACL,EAAKrD,MAAMuE,oBAAqB,EAAKf,MAAMjB,YAAc8B,KALxDC,EAAOF,iBAa1BlB,EACF,qBAAK7C,UAAWF,EAAO+C,cAAvB,SACKnD,KAAKyD,MAAMN,gBAGpB,OACI,gCACKa,EACAf,EACAE,S,GA1HiB1C,aAgI5BL,EAAS,CACX+C,cAAe,iEACfmB,YAAa,oBACbrB,aAAc,mFACde,MAAO,4FACPI,MAAO,iG,gBCtIUK,E,kDAIjB,WAAaxE,GAAO,IAAD,8BACf,cAAMA,IAMVyE,SAAW,CACPC,QAAS,CACLzE,OAAQ,UACR0E,MAAO,GACPC,IAAK,WAETC,MAAO,CACH5E,OAAQ,QACR0E,MAAO,GACPC,IAAK,YAhBM,EAoBnBE,SAAW,GApBQ,EAsBnBC,eAAiB,WACb,EAAKN,SAAW,CACZC,QAAS,CACLzE,OAAQ,UACR0E,MAAO,EAAK3E,MAAMgF,MAAQ,GAAnB,sBAA4B,EAAKP,SAASC,QAAQC,OAAlD,CAAyD,EAAK3E,MAAM0E,UAC3EE,IAAK,WAETC,MAAO,CACH5E,OAAQ,QACR0E,MAAO,EAAK3E,MAAMgF,MAAQ,GAAnB,sBAA4B,EAAKP,SAASI,MAAMF,OAAhD,CAAuD,EAAK3E,MAAM6E,QACzED,IAAK,YAIb,EAAKE,SAAW,EAAK9E,MAAMgF,MAAQ,GAAnB,sBAA4B,EAAKF,UAAjC,CAA2C,EAAK9E,MAAM8E,YAlCtE,EAAKtB,MAAQ,CACTyB,QAAS,GACTrB,MAAM,GAJK,E,0CAsCnB,WAEI,OADA7D,KAAKgF,iBAED,cAAC,IAAD,CACIG,QAAS,CACLC,UAAW,CACPC,SAAU,GAEdC,OAAQ,CACJC,EAAG,CACCC,MAAO,CACHC,SAAU,MAK1BC,KAAK,OACLC,KAAM,CACFC,OAAQ5F,KAAK+E,SACbc,SAAS,CACL,CACI7E,MAAOhB,KAAK0E,SAASC,QAAQzE,OAC7ByF,KAAM3F,KAAK0E,SAASC,QAAQC,MAC5Bf,KAAM7D,KAAKyD,MAAMI,KACjBiC,YAAa9F,KAAK0E,SAASC,QAAQE,IACnCK,QAASlF,KAAKyD,MAAMyB,SAExB,CACIlE,MAAOhB,KAAK0E,SAASI,MAAM5E,OAC3ByF,KAAM3F,KAAK0E,SAASI,MAAMF,MAC1Bf,KAAM7D,KAAKyD,MAAMI,KACjBiC,YAAa9F,KAAK0E,SAASI,MAAMD,IACjCK,QAASlF,KAAKyD,MAAMyB,iB,GA1ENa,iBCWrBC,E,4MAEjBvC,MAAQ,CACJM,OAAQ,MACRY,QAAS,EACTG,MAAO,EACPC,SAAU,G,EAGdkB,cAAgB,SAAClC,GACb,EAAKb,SAAS,CAACa,Y,EAGnBmC,mBAAqB,SAACC,GAClB,EAAKjD,SACDiD,EACA,CAACxB,QAAS,EAAKlB,MAAMkB,QAAU,GAC/B,CAACG,MAAO,EAAKrB,MAAMqB,MAAQ,IAE/B,EAAK5B,SAAS,CAAC6B,SAAU,EAAKtB,MAAMsB,SAAW,K,EAGnDqB,eAAiB,WACb,EAAKlD,SAAS,CACVyB,QAAS,EACTG,MAAO,EACPC,SAAU,K,4CAIlB,WAAU,IAAD,OACL,OACI,sBAAKzE,UAAU,8BAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,eAAC,EAAD,CAAQA,UAAU,UAAlB,UACI,qBAAKA,UAAU,UAAf,SAE8B,OAAtBN,KAAKyD,MAAMM,OACX,cAAC,EAAD,CACIA,OAAQ/D,KAAKyD,MAAMM,OACnBS,oBAAqBxE,KAAKkG,qBAG9B,qBAAK5F,UAAU,wDAAf,SACI,cAAC,EAAD,CACIO,MAAM,sBACNP,UAAU,YAM1B,cAAC,EAAD,CACIa,SAAU,kBAAM,EAAK8E,cAAc,OACnC7E,UAAW,kBAAM,EAAK6E,cAAc,QACpC5E,OAAQ,kBAAM,EAAK+E,kBACnB9F,UAAU,cAMtB,qBAAKA,UAAU,kBAAf,SACI,cAAC,EAAD,CACIJ,OAAO,mBACPI,UAAU,UAFd,SAGQ,cAAC,EAAD,CACIqE,QAAS3E,KAAKyD,MAAMkB,QACpBG,MAAO9E,KAAKyD,MAAMqB,MAClBC,SAAU/E,KAAKyD,MAAMsB,SACrBE,MAA+B,IAAvBjF,KAAKyD,MAAMkB,SAAsC,IAArB3E,KAAKyD,MAAMqB,mB,GAtE9CrE,aA+EjC4F,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.96e9b20a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card } from 'primereact/card'\r\n\r\nexport default class Cartao extends Component {\r\n    render() {\r\n        return (\r\n            <Card title={this.props.titulo} style={styles.card}>\r\n                <div className={`${styles.inner} ${this.props.className}`}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    card: {backgroundColor: 'var(--blue-100)'},\r\n    inner: 'border-round bg-orange-50 w-8 p-2 m-auto'\r\n}\r\n\r\nCartao.defaultProps = {\r\n    titulo: 'Resolva a continha se puder!'\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Mensagem extends Component {\r\n    render() {\r\n        return (\r\n            <div className={`${styles.texto} ${this.props.className}`}>\r\n                {this.props.texto}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    texto: 'flex justify-content-center align-items-center border-round bg-red-100 shadow-2 h-4rem'\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button } from 'primereact/button'\r\n\r\nexport default class Botoes extends Component {\r\n    render() {\r\n        return (\r\n            <div className={`${this.props.className} ${styles.botoes}`}>\r\n\r\n                <div className=\"flex justify-content-evenly\">\r\n                    <Button \r\n                        label=\"Iniciar jogo\"\r\n                        className=\"p-button-raised p-button-outlined\"\r\n                        icon=\"pi pi-check\"\r\n                        onClick={this.props.fIniciar}\r\n                    />\r\n                    <Button \r\n                        label=\"Encerrar jogo\"\r\n                        className=\"p-button-raised p-button-outlined p-button-danger\"\r\n                        icon=\"pi pi-times\"\r\n                        onClick={this.props.fEncerrar}\r\n                    />\r\n\r\n                    <Button \r\n                        label=\"Zerar pontuaÃ§ao\"\r\n                        className=\"p-button-raised p-button-outlined p-button-warning\"\r\n                        icon=\"pi pi-times\"\r\n                        onClick={this.props.fZerar}\r\n                    />\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    botoes: ''\r\n}","import React, { Component } from 'react'\r\nimport _ from 'underscore'\r\nimport { Button } from 'primereact/button'\r\n\r\nexport default class Jogo extends Component {\r\n    constructor (props){\r\n        super(props)\r\n        this.state = {\r\n            alternativas: Array(5).fill(undefined),\r\n            intervaloDeAtualizacao: 5000,\r\n            tempoRestante: 5\r\n\r\n        }\r\n    }\r\n    \r\n    valorInicial = 1\r\n    valorFinal = 10\r\n\r\n    timerGeral = null\r\n    timerSegundoASegundo = null\r\n\r\n    operacoes = [\r\n        {\r\n            simbolo: '+', operacao: (a, b) => a + b,\r\n        },\r\n        {\r\n            simbolo: '-', operacao: (a, b) => a - b\r\n        }\r\n    ]\r\n\r\n    gerarConta = () => {\r\n        let n1 = Math.floor(Math.random() * this.valorFinal) + this.valorInicial\r\n        let n2 = Math.floor(Math.random() * this.valorFinal) + this.valorInicial\r\n        let oQueFazer = Math.floor(Math.random() * this.operacoes.length)\r\n        let simbolo = this.operacoes[oQueFazer]['simbolo']\r\n        let resultado = this.operacoes[oQueFazer]['operacao'](n1, n2)\r\n        return {n1, n2, simbolo, resultado}\r\n    }\r\n\r\n    gerarAlternativas = (resultado) => {\r\n        let aux = [resultado]\r\n        while (aux.length < 5){\r\n            let n = Math.floor (Math.random() * this.valorFinal) + this.valorInicial\r\n            if (!aux.includes(n))\r\n                aux.push(n)\r\n        }\r\n        return _.shuffle(aux)\r\n    }\r\n\r\n    gerarJogo = () => {\r\n        let {n1, n2, simbolo, resultado} = this.gerarConta()\r\n        let alternativas = this.gerarAlternativas(resultado)\r\n        this.setState({\r\n            n1, n2, resultado, simbolo, alternativas, tempoRestante: 5\r\n        })\r\n    }\r\n\r\n    encerrar = () => {\r\n        clearInterval(this.timerGeral)\r\n        clearInterval(this.timerSegundoASegundo)\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (this.props.status === 'on')\r\n            this.iniciarRodada()\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.encerrar()\r\n    }\r\n\r\n    iniciarRodada = () => {\r\n        clearInterval(this.timerGeral)\r\n        clearInterval(this.timerSegundoASegundo)\r\n        let fire = (f, t) => {\r\n            f()\r\n            this.timerSegundoASegundo = setInterval (() => {\r\n                this.setState({tempoRestante: this.state.tempoRestante - 1})\r\n            }, 1000)\r\n            return setInterval(f, t)\r\n        }\r\n        this.timerGeral = fire(this.gerarJogo, this.state.intervaloDeAtualizacao)\r\n    }\r\n\r\n    render(){\r\n        const conta = (\r\n            <div className={styles.conta}>\r\n                {\r\n                    [this.state.n1, this.state.simbolo, this.state.n2, '=', '...'].map( (e, i) => (\r\n                        <div\r\n                            key={i.toString()} \r\n                            className={styles.valor}>\r\n                            {e}\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n\r\n        const alternativas = (\r\n            <div className={styles.alternativas}>\r\n                {\r\n                    this.state.alternativas.map ((alternativa, indice) => (\r\n                        <Button\r\n                            key={indice.toString()}\r\n                            label={alternativa?.toString()} \r\n                            className={`${styles.valor} ${styles.alternativa}`}\r\n                            onClick={() => {\r\n                                this.iniciarRodada()\r\n                                this.props.fAtualizarPontuacao (this.state.resultado === alternativa)\r\n                            }}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n\r\n        const tempoRestante = (\r\n            <div className={styles.tempoRestante}>\r\n                {this.state.tempoRestante}\r\n            </div>\r\n        )\r\n        return (\r\n            <div>\r\n                {conta}\r\n                {alternativas}\r\n                {tempoRestante}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    tempoRestante: 'flex justify-content-center align-items-center h-4rem text-3xl',\r\n    alternativa: 'p-button-outlined',\r\n    alternativas: 'flex justify-content-evenly align-items-center border-round shadow-2 h-4rem mt-2',\r\n    conta: 'flex justify-content-center align-items-center border-round bg-orange-200 shadow-2 h-4rem',\r\n    valor: 'flex justify-content-center align-items-center border-round border-1 border-400 h-3rem w-3rem'\r\n}\r\n\r\n// Jogo.defaultProps ={\r\n//     titulo: 'Jogo de continhas'\r\n// }\r\n\r\n// render() {\r\n//     const conta = (\r\n//         <div className={styles.conta}>\r\n//             <div className={styles.valor}>7</div>\r\n//             <div className={styles.valor}>x</div>\r\n//             <div className={styles.valor}>8</div>\r\n//         </div>\r\n//     )\r\n//     const botoes = (\r\n//         <div className={styles.botoes}>\r\n//             <Button \r\n//                 label=\"Iniciar Jogo\"\r\n//                 className=\"p-button-raised\"\r\n//                 icon=\"pi pi-check\"\r\n//             />\r\n//             <Button \r\n//                 label=\"Encerrar jogo\"\r\n//                 className=\"p-button-raised p-button-danger\"\r\n//                 icon=\"pi pi-times\"\r\n//             />\r\n//         </div>\r\n//     )\r\n//     return (\r\n//         <Card title={this.props.titulo} style={styles.card}>\r\n//             <div className={styles.inner}>\r\n//                 {conta}\r\n//                 {botoes}\r\n//             </div>\r\n//         </Card>\r\n//     )\r\n// }","import { Chart } from 'primereact/chart'\r\nimport React, { PureComponent } from 'react'\r\n\r\nexport default class GraficoLinha extends PureComponent {\r\n// acertos: [1, 1, 2, 3, 3]\r\n// erros: [0, 1, 1, 1, 2]\r\n// contador: [1, 2, 3, 4, 5]\r\n    constructor (props){\r\n        super(props)\r\n        this.state = {\r\n            tension: 0.4,\r\n            fill: false\r\n        }\r\n    }\r\n    colecoes = {\r\n        acertos: {\r\n            titulo: 'Acertos',\r\n            dados: [],\r\n            cor: '#2196F3'\r\n        },\r\n        erros: {\r\n            titulo: 'Erros',\r\n            dados: [],\r\n            cor: '#F44336'\r\n        }\r\n    }\r\n\r\n    contador = []\r\n\r\n    atualizarDados = () => {\r\n        this.colecoes = {\r\n            acertos: {\r\n                titulo: 'Acertos',\r\n                dados: this.props.zerar ? [] : [...this.colecoes.acertos.dados, this.props.acertos],\r\n                cor: '#2196F3'\r\n            },\r\n            erros: {\r\n                titulo: 'Erros',\r\n                dados: this.props.zerar ? [] : [...this.colecoes.erros.dados, this.props.erros],\r\n                cor: '#F44336'\r\n\r\n            }\r\n        }\r\n        this.contador = this.props.zerar ? [] : [...this.contador, this.props.contador]\r\n    }\r\n    render() {\r\n        this.atualizarDados()\r\n        return (\r\n            <Chart \r\n                options={{\r\n                    animation: {\r\n                        duration: 0\r\n                    },\r\n                    scales: {\r\n                        y: {\r\n                            ticks: {\r\n                                stepSize: 1\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n                type='line'\r\n                data={{\r\n                    labels: this.contador,\r\n                    datasets:[\r\n                        {\r\n                            label: this.colecoes.acertos.titulo,\r\n                            data: this.colecoes.acertos.dados,\r\n                            fill: this.state.fill,\r\n                            borderColor: this.colecoes.acertos.cor,\r\n                            tension: this.state.tension   \r\n                        },\r\n                        {\r\n                            label: this.colecoes.erros.titulo,\r\n                            data: this.colecoes.erros.dados,\r\n                            fill: this.state.fill,\r\n                            borderColor: this.colecoes.erros.cor,\r\n                            tension: this.state.tension\r\n                        }\r\n                    ] \r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import 'primereact/resources/themes/saga-blue/theme.css'\r\nimport 'primereact/resources/primereact.min.css'\r\nimport 'primeicons/primeicons.css'\r\nimport 'primeflex/primeflex.css'\r\n\r\nimport React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Cartao from './Cartao'\r\nimport Mensagem from './Mensagem'\r\nimport Botoes from './Botoes'\r\nimport Jogo from './Jogo'\r\nimport GraficoLinha from './GraficoLinha'\r\n// import Jogo from './Jogo'\r\n\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n        status: 'off',\r\n        acertos: 0,\r\n        erros: 0,\r\n        contador: 0\r\n    }\r\n\r\n    alterarStatus = (status) => {\r\n        this.setState({status})\r\n    }\r\n\r\n    atualizarPontuacao = (acertou) => {\r\n        this.setState(\r\n            acertou ? \r\n            {acertos: this.state.acertos + 1} : \r\n            {erros: this.state.erros + 1}\r\n        )\r\n        this.setState({contador: this.state.contador + 1})\r\n    }\r\n\r\n    zerarPontuacao = () => {\r\n        this.setState({\r\n            acertos: 0,\r\n            erros: 0,\r\n            contador: 0\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"grid justify-content-center\">\r\n                <div className=\"col-12 lg:col-6\">\r\n                    <Cartao className=\"h-18rem\">\r\n                        <div className=\"h-12rem\">\r\n                            {\r\n                                this.state.status === 'on' ?\r\n                                <Jogo \r\n                                    status={this.state.status}\r\n                                    fAtualizarPontuacao={this.atualizarPontuacao}\r\n                                />\r\n                                :\r\n                                <div className=\"flex align-items-center justify-content-center h-full\">\r\n                                    <Mensagem \r\n                                        texto=\"Clique para iniciar\"\r\n                                        className=\"w-6\"\r\n                                    />\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n                        <Botoes\r\n                            fIniciar={() => this.alterarStatus('on')}\r\n                            fEncerrar={() => this.alterarStatus('off')}\r\n                            fZerar={() => this.zerarPontuacao()} \r\n                            className=\"mt-5\"\r\n                        />\r\n                        {/* {`Acertos: ${this.state.acertos}`}\r\n                        {`Erros: ${this.state.erros}`} */}\r\n                    </Cartao>\r\n                </div>\r\n                <div className=\"col-12 lg:col-6\">\r\n                    <Cartao\r\n                        titulo=\"Sua pontuaÃ§ao\"\r\n                        className=\"h-18rem\">\r\n                            <GraficoLinha \r\n                                acertos={this.state.acertos}\r\n                                erros={this.state.erros}\r\n                                contador={this.state.contador}\r\n                                zerar={(this.state.acertos === 0 && this.state.erros === 0)}\r\n                            />\r\n                    </Cartao>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n)\r\n"],"sourceRoot":""}